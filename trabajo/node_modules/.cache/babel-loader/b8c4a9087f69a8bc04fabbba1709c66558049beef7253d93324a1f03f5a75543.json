{"ast":null,"code":"var _jsxFileName = \"D:\\\\ARGENTINA PROGRAMA\\\\Tochi-Uberti trabajo final\\\\trabajo\\\\src\\\\componentes\\\\TaskList.js\";\nimport React from \"react\";\nimport TaskItem from \"./TaskItem\";\n\n//recibimos de props la propiedad list y el metodo setList, \n//recorremos list con map, para generar los compoonentes de TaskItem\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = props => {\n  const {\n    list,\n    setList\n  } = props;\n\n  //Creamos un manejador de eventos onChange para el componente TaskItem\n  //Creamos un método onChangeStatus, para el manejador de onChange\n  //onChangeStatus va a recibir los datos de TaksItem que haya cambiardo\n  //recoremos con map list y  actualizamos los valores\n  const onChangeStatus = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    const updateList = list.map(item => ({\n      ...item,\n      done: item.id === name ? checked : item.done\n    }));\n    setList(updateList);\n    var tacha = document.getElementById(\"estadoTexto\");\n    chk = document.getElementById(\"estadoItem\");\n    if (checked = true) {\n      tacha.style.textdecoration = 'line-through';\n    }\n    ;\n\n    //El metodo onClickRemoveItem para manejar onClick\n    //El método onClickRemoveItem filtra la lista eliminando todos los items\n    // done === true y actualiza la lista con setList\n\n    const onClickRemoveItem = e => {\n      const updateList = list.filter(item => !item.done);\n      setList(updateList);\n    };\n    const chk = list.map(item => /*#__PURE__*/_jsxDEV(TaskItem, {\n      data: item,\n      onChange: onChangeStatus\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this));\n    return (\n      /*#__PURE__*/\n      //Si la list esta vacia mostramos: \"No hay tareas pendientes\"\n      //y ocultamos el boton-borrar.\n      _jsxDEV(\"div\", {\n        className: \"TaskList\",\n        children: [list.length ? chk : \"No hay tareas pendientes.\", list.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"boton-borrar\",\n            onClick: onClickRemoveItem,\n            children: \"Borrar terminadas.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    );\n  };\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskItem","jsxDEV","_jsxDEV","TaskList","props","list","setList","onChangeStatus","e","name","checked","target","updateList","map","item","done","id","tacha","document","getElementById","chk","style","textdecoration","onClickRemoveItem","filter","data","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","children","length","onClick","_c","$RefreshReg$"],"sources":["D:/ARGENTINA PROGRAMA/Tochi-Uberti trabajo final/trabajo/src/componentes/TaskList.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\n//recibimos de props la propiedad list y el metodo setList, \r\n//recorremos list con map, para generar los compoonentes de TaskItem\r\n\r\nconst TaskList = props => {\r\n        \r\n        const { list, setList } = props;\r\n      \r\n        //Creamos un manejador de eventos onChange para el componente TaskItem\r\n        //Creamos un método onChangeStatus, para el manejador de onChange\r\n        //onChangeStatus va a recibir los datos de TaksItem que haya cambiardo\r\n        //recoremos con map list y  actualizamos los valores\r\n        const onChangeStatus = e => {\r\n          const { name, checked} = e.target;\r\n      \r\n          const updateList = list.map(item => ({\r\n            ...item,\r\n            done: item.id === name ? checked : item.done\r\n          }));\r\n          setList(updateList);\r\n          var tacha = document.getElementById(\"estadoTexto\");\r\n          chk = document.getElementById(\"estadoItem\");\r\n          if (checked=true) {\r\n              tacha.style.textdecoration='line-through';\r\n        };\r\n      \r\n        //El metodo onClickRemoveItem para manejar onClick\r\n        //El método onClickRemoveItem filtra la lista eliminando todos los items\r\n        // done === true y actualiza la lista con setList\r\n        \r\n        const onClickRemoveItem = e => {\r\n          const updateList = list.filter(item => !item.done);\r\n          setList(updateList);\r\n        };\r\n      \r\n        const chk = list.map(item => (\r\n          <TaskItem key={item.id} data={item} onChange={onChangeStatus} />\r\n        ));\r\n        return (\r\n           //Si la list esta vacia mostramos: \"No hay tareas pendientes\"\r\n           //y ocultamos el boton-borrar.\r\n          <div className=\"TaskList\">\r\n            {list.length ? chk : \"No hay tareas pendientes.\"}\r\n            {list.length ? (\r\n              <p>\r\n                <button className=\"boton-borrar\" onClick={onClickRemoveItem}>\r\n                  Borrar terminadas.\r\n                </button>\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n        );\r\n      \r\n      };\r\n\r\n};\r\nexport default TaskList;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EAElB,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,KAAK;;EAE/B;EACA;EACA;EACA;EACA,MAAMG,cAAc,GAAGC,CAAC,IAAI;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAO,CAAC,GAAGF,CAAC,CAACG,MAAM;IAEjC,MAAMC,UAAU,GAAGP,IAAI,CAACQ,GAAG,CAACC,IAAI,KAAK;MACnC,GAAGA,IAAI;MACPC,IAAI,EAAED,IAAI,CAACE,EAAE,KAAKP,IAAI,GAAGC,OAAO,GAAGI,IAAI,CAACC;IAC1C,CAAC,CAAC,CAAC;IACHT,OAAO,CAACM,UAAU,CAAC;IACnB,IAAIK,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAClDC,GAAG,GAAGF,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IAC3C,IAAIT,OAAO,GAAC,IAAI,EAAE;MACdO,KAAK,CAACI,KAAK,CAACC,cAAc,GAAC,cAAc;IAC/C;IAAC;;IAED;IACA;IACA;;IAEA,MAAMC,iBAAiB,GAAGf,CAAC,IAAI;MAC7B,MAAMI,UAAU,GAAGP,IAAI,CAACmB,MAAM,CAACV,IAAI,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC;MAClDT,OAAO,CAACM,UAAU,CAAC;IACrB,CAAC;IAED,MAAMQ,GAAG,GAAGf,IAAI,CAACQ,GAAG,CAACC,IAAI,iBACvBZ,OAAA,CAACF,QAAQ;MAAeyB,IAAI,EAAEX,IAAK;MAACY,QAAQ,EAAEnB;IAAe,GAA9CO,IAAI,CAACE,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAyC,CAChE,CAAC;IACF;MAAA;MACG;MACA;MACD5B,OAAA;QAAK6B,SAAS,EAAC,UAAU;QAAAC,QAAA,GACtB3B,IAAI,CAAC4B,MAAM,GAAGb,GAAG,GAAG,2BAA2B,EAC/Cf,IAAI,CAAC4B,MAAM,gBACV/B,OAAA;UAAA8B,QAAA,eACE9B,OAAA;YAAQ6B,SAAS,EAAC,cAAc;YAACG,OAAO,EAAEX,iBAAkB;YAAAS,QAAA,EAAC;UAE7D;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,GACF,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;EAGV,CAAC;AAEP,CAAC;AAACK,EAAA,GAnDIhC,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}