{"ast":null,"code":"import React from\"react\";import TaskItem from\"./TaskItem\";//recibimos de props la propiedad list y el método setList, \n//recorremos list con map, para generar los compoonentes de TaskItem\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const TaskList=props=>{const{list,setList}=props;//Creamos un manejador de eventos onChange para el componente TaskItem\n//Creamos un método onChangeStatus, para el manejador de onChange\n//onChangeStatus va a recibir los datos de TaksItem que hayan cambiado\n//recoremos con map list y  actualizamos los valores\nconst onChangeStatus=e=>{const{name,checked}=e.target;const updateList=list.map(item=>({...item,done:item.id===name?checked:item.done}));setList(updateList);};//El método onClickRemoveItem para manejar onClick\n//El método onClickRemoveItem filtra la lista eliminando todos los items\n// done == true y actualiza la lista con setList\nconst onClickRemoveItem=e=>{const updateList=list.filter(item=>!item.done);setList(updateList);};const chk=list.map(item=>/*#__PURE__*/_jsx(TaskItem,{data:item,onChange:onChangeStatus},item.id));return/*#__PURE__*/ (//Si la list está vacía mostramos: \"No hay tareas pendientes\"\n//y ocultamos el boton-borrar.\n_jsxs(\"div\",{className:\"TaskList\",children:[list.length?chk:\"No hay tareas pendientes.\",list.length?/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"boton-borrar\",onClick:onClickRemoveItem,children:\"Borrar terminadas\"})}):null]}));};export default TaskList;","map":{"version":3,"names":["React","TaskItem","jsx","_jsx","jsxs","_jsxs","TaskList","props","list","setList","onChangeStatus","e","name","checked","target","updateList","map","item","done","id","onClickRemoveItem","filter","chk","data","onChange","className","children","length","onClick"],"sources":["C:/Users/Daniela/Desktop/UTN Argentina Programa 2023 (octubre)/TP final/TrabajoPracticoArgentinaPrograma/trabajo/src/componentes/TaskList.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\n//recibimos de props la propiedad list y el método setList, \r\n//recorremos list con map, para generar los compoonentes de TaskItem\r\n\r\nconst TaskList = props => {\r\n        \r\n        const { list, setList } = props;\r\n      \r\n        //Creamos un manejador de eventos onChange para el componente TaskItem\r\n        //Creamos un método onChangeStatus, para el manejador de onChange\r\n        //onChangeStatus va a recibir los datos de TaksItem que hayan cambiado\r\n        //recoremos con map list y  actualizamos los valores\r\n        const onChangeStatus = e => {\r\n          const { name, checked} = e.target;\r\n      \r\n          const updateList = list.map(item => ({\r\n            ...item,\r\n            done: item.id === name ? checked : item.done\r\n          }));\r\n          setList(updateList);\r\n        };\r\n      \r\n        //El método onClickRemoveItem para manejar onClick\r\n        //El método onClickRemoveItem filtra la lista eliminando todos los items\r\n        // done == true y actualiza la lista con setList\r\n        \r\n        const onClickRemoveItem = e => {\r\n          const updateList = list.filter(item => !item.done);\r\n          setList(updateList);\r\n        };\r\n      \r\n        const chk = list.map(item => (\r\n          <TaskItem key={item.id} data={item} onChange={onChangeStatus} />\r\n        ));\r\n\r\n        return (\r\n           //Si la list está vacía mostramos: \"No hay tareas pendientes\"\r\n           //y ocultamos el boton-borrar.\r\n          <div className=\"TaskList\">\r\n            {list.length ? chk : \"No hay tareas pendientes.\"}\r\n            {list.length ? (\r\n              <p>\r\n                <button className=\"boton-borrar\" onClick={onClickRemoveItem}>\r\n                  Borrar terminadas\r\n                </button>\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n        );\r\n\r\n\r\n        \r\n\r\n      };\r\nexport default TaskList;"],"mappings":"AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAEjC;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEA,KAAM,CAAAC,QAAQ,CAAGC,KAAK,EAAI,CAElB,KAAM,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGF,KAAK,CAE/B;AACA;AACA;AACA;AACA,KAAM,CAAAG,cAAc,CAAGC,CAAC,EAAI,CAC1B,KAAM,CAAEC,IAAI,CAAEC,OAAO,CAAC,CAAGF,CAAC,CAACG,MAAM,CAEjC,KAAM,CAAAC,UAAU,CAAGP,IAAI,CAACQ,GAAG,CAACC,IAAI,GAAK,CACnC,GAAGA,IAAI,CACPC,IAAI,CAAED,IAAI,CAACE,EAAE,GAAKP,IAAI,CAAGC,OAAO,CAAGI,IAAI,CAACC,IAC1C,CAAC,CAAC,CAAC,CACHT,OAAO,CAACM,UAAU,CAAC,CACrB,CAAC,CAED;AACA;AACA;AAEA,KAAM,CAAAK,iBAAiB,CAAGT,CAAC,EAAI,CAC7B,KAAM,CAAAI,UAAU,CAAGP,IAAI,CAACa,MAAM,CAACJ,IAAI,EAAI,CAACA,IAAI,CAACC,IAAI,CAAC,CAClDT,OAAO,CAACM,UAAU,CAAC,CACrB,CAAC,CAED,KAAM,CAAAO,GAAG,CAAGd,IAAI,CAACQ,GAAG,CAACC,IAAI,eACvBd,IAAA,CAACF,QAAQ,EAAesB,IAAI,CAAEN,IAAK,CAACO,QAAQ,CAAEd,cAAe,EAA9CO,IAAI,CAACE,EAA2C,CAChE,CAAC,CAEF,oBACG;AACA;AACDd,KAAA,QAAKoB,SAAS,CAAC,UAAU,CAAAC,QAAA,EACtBlB,IAAI,CAACmB,MAAM,CAAGL,GAAG,CAAG,2BAA2B,CAC/Cd,IAAI,CAACmB,MAAM,cACVxB,IAAA,MAAAuB,QAAA,cACEvB,IAAA,WAAQsB,SAAS,CAAC,cAAc,CAACG,OAAO,CAAER,iBAAkB,CAAAM,QAAA,CAAC,mBAE7D,CAAQ,CAAC,CACR,CAAC,CACF,IAAI,EACL,CAAC,EAMV,CAAC,CACP,cAAe,CAAApB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}