{"ast":null,"code":"var _jsxFileName = \"D:\\\\ARGENTINA PROGRAMA\\\\Tochi-Uberti trabajo final\\\\trabajo\\\\src\\\\componentes\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TaskItem from \"./TaskItem\";\n\n//recibimos de props la propiedad list y el metodo setList, \n//recorremos list con map, para generar los compoonentes de TaskItem\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskList = props => {\n  _s();\n  const {\n    list,\n    setList\n  } = props;\n\n  //Creamos un manejador de eventos onChange para el componente TaskItem\n  //Creamos un método onChangeStatus, para el manejador de onChange\n  //onChangeStatus va a recibir los datos de TaksItem que haya cambiardo\n  //recoremos con map list y  actualizamos los valores\n  const onChangeStatus = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    const updateList = list.map(item => ({\n      ...item,\n      done: item.id === name ? checked : item.done\n    }));\n    setList(updateList);\n  };\n  useEffect(() => {\n    setsetList(() => count * 2);\n  }, [count]); // <- add the count variable here\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(c => c + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Calculation: \", calculation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n\n  //El metodo onClickRemoveItem para manejar onClick\n  //El método onClickRemoveItem filtra la lista eliminando todos los items\n  // done == true y actualiza la lista con setList\n\n  const onClickRemoveItem = e => {\n    const updateList = list.filter(item => !item.done);\n    setList(updateList);\n  };\n  const chk = list.map(item => /*#__PURE__*/_jsxDEV(TaskItem, {\n    data: item,\n    onChange: onChangeStatus\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 11\n  }, this));\n  return (\n    /*#__PURE__*/\n    //Si la list esta vacia mostramos: \"No hay tareas pendientes\"\n    //y ocultamos el boton-borrar.\n    _jsxDEV(\"div\", {\n      className: \"TaskList\",\n      children: [list.length ? chk : \"No hay tareas pendientes.\", list.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"boton-borrar\",\n          onClick: onClickRemoveItem,\n          children: \"Borrar terminadas.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)\n  );\n};\n_s(TaskList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","TaskItem","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","props","_s","list","setList","onChangeStatus","e","name","checked","target","updateList","map","item","done","id","useEffect","setsetList","count","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","setCount","c","calculation","onClickRemoveItem","filter","chk","data","onChange","className","length","_c","$RefreshReg$"],"sources":["D:/ARGENTINA PROGRAMA/Tochi-Uberti trabajo final/trabajo/src/componentes/TaskList.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\n//recibimos de props la propiedad list y el metodo setList, \r\n//recorremos list con map, para generar los compoonentes de TaskItem\r\n\r\nconst TaskList = props => {\r\n        \r\n        const { list, setList } = props;\r\n      \r\n        //Creamos un manejador de eventos onChange para el componente TaskItem\r\n        //Creamos un método onChangeStatus, para el manejador de onChange\r\n        //onChangeStatus va a recibir los datos de TaksItem que haya cambiardo\r\n        //recoremos con map list y  actualizamos los valores\r\n        const onChangeStatus = e => {\r\n          const { name, checked} = e.target;\r\n      \r\n          const updateList = list.map(item => ({\r\n            ...item,\r\n            done: item.id === name ? checked : item.done\r\n          }));\r\n          setList(updateList);\r\n        };\r\n        useEffect(() => {\r\n          setsetList(() => count * 2);\r\n        }, [count]); // <- add the count variable here\r\n      \r\n        return (\r\n          <>\r\n            <p>Count: {count}</p>\r\n            <button onClick={() => setCount((c) => c + 1)}>+</button>\r\n            <p>Calculation: {calculation}</p>\r\n          </>\r\n        );\r\n      \r\n        //El metodo onClickRemoveItem para manejar onClick\r\n        //El método onClickRemoveItem filtra la lista eliminando todos los items\r\n        // done == true y actualiza la lista con setList\r\n        \r\n        const onClickRemoveItem = e => {\r\n          const updateList = list.filter(item => !item.done);\r\n          setList(updateList);\r\n        };\r\n      \r\n        const chk = list.map(item => (\r\n          <TaskItem key={item.id} data={item} onChange={onChangeStatus} />\r\n        ));\r\n\r\n        return (\r\n           //Si la list esta vacia mostramos: \"No hay tareas pendientes\"\r\n           //y ocultamos el boton-borrar.\r\n          <div className=\"TaskList\">\r\n            {list.length ? chk : \"No hay tareas pendientes.\"}\r\n            {list.length ? (\r\n              <p>\r\n                <button className=\"boton-borrar\" onClick={onClickRemoveItem}>\r\n                  Borrar terminadas.\r\n                </button>\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n        );\r\n\r\n\r\n        \r\n\r\n      };\r\nexport default TaskList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}