{"ast":null,"code":"var _jsxFileName = \"D:\\\\ARGENTINA PROGRAMA\\\\Tochi-Uberti trabajo final\\\\trabajo\\\\src\\\\componentes\\\\TaskItem.js\";\nimport React, { Fragment } from \"react\";\n\n//Recibimos de props la propiedad data y el metodo onChange\n//Obtenemos de data: id, description y done\n//En el atributo del inputt, agregamos el metodo onChange, cuando se \n//da click, va a ejecutar el método.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = props => {\n  const {\n    onChange,\n    data: {\n      id,\n      description,\n      done\n    }\n  } = props;\n\n  // El valor de checked actualiza el estilo mediante done\n  const controlTachado = done ? {\n    textDecoration: 'line-through'\n  } : null;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"nuevoItem\",\n      style: controlTachado //obtiene el estilo \n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"estadoItem\",\n        name: id,\n        type: \"checkbox\",\n        checked: done\n\n        //Cuando cambia captura el valor de checked (capturado en el evento e de input) para el input con name:id que desencadenó el evento.\n        ,\n        onChange: e => onChange({\n          target: {\n            name: id,\n            checked: e.target.checked\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tarea\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"estadoTexto\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","Fragment","jsxDEV","_jsxDEV","TaskItem","props","onChange","data","id","description","done","controlTachado","textDecoration","children","className","style","name","type","checked","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ARGENTINA PROGRAMA/Tochi-Uberti trabajo final/trabajo/src/componentes/TaskItem.js"],"sourcesContent":["import React, { Fragment } from \"react\";\r\n\r\n//Recibimos de props la propiedad data y el metodo onChange\r\n//Obtenemos de data: id, description y done\r\n//En el atributo del inputt, agregamos el metodo onChange, cuando se \r\n//da click, va a ejecutar el método.\r\nconst TaskItem = props => {\r\n  const {\r\n    onChange,\r\n    data: { id, description, done }\r\n  } = props;\r\n\r\n\r\n  // El valor de checked actualiza el estilo mediante done\r\n  const controlTachado = done ? {\r\n    textDecoration: 'line-through'\r\n  } : null;\r\n\r\n  return (\r\n    <Fragment>\r\n      <label className=\"nuevoItem\"\r\n        style={controlTachado} //obtiene el estilo \r\n      >\r\n        <input\r\n          className=\"estadoItem\"\r\n          name={id}\r\n          type=\"checkbox\"\r\n          checked={done} \r\n          \r\n          //Cuando cambia captura el valor de checked (capturado en el evento e de input) para el input con name:id que desencadenó el evento.\r\n          onChange={e => onChange({target: {name: id,checked: e.target.checked}})} \r\n        />\r\n        <div className=\"tarea\">\r\n          <div className=\"estadoTexto\" >{description}</div>\r\n         \r\n        </div>\r\n      </label>\r\n    </Fragment>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default TaskItem;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;EACxB,MAAM;IACJC,QAAQ;IACRC,IAAI,EAAE;MAAEC,EAAE;MAAEC,WAAW;MAAEC;IAAK;EAChC,CAAC,GAAGL,KAAK;;EAGT;EACA,MAAMM,cAAc,GAAGD,IAAI,GAAG;IAC5BE,cAAc,EAAE;EAClB,CAAC,GAAG,IAAI;EAER,oBACET,OAAA,CAACF,QAAQ;IAAAY,QAAA,eACPV,OAAA;MAAOW,SAAS,EAAC,WAAW;MAC1BC,KAAK,EAAEJ,cAAe,CAAC;MAAA;MAAAE,QAAA,gBAEvBV,OAAA;QACEW,SAAS,EAAC,YAAY;QACtBE,IAAI,EAAER,EAAG;QACTS,IAAI,EAAC,UAAU;QACfC,OAAO,EAAER;;QAET;QAAA;QACAJ,QAAQ,EAAEa,CAAC,IAAIb,QAAQ,CAAC;UAACc,MAAM,EAAE;YAACJ,IAAI,EAAER,EAAE;YAACU,OAAO,EAAEC,CAAC,CAACC,MAAM,CAACF;UAAO;QAAC,CAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eACFrB,OAAA;QAAKW,SAAS,EAAC,OAAO;QAAAD,QAAA,eACpBV,OAAA;UAAKW,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAGJ;QAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGf,CAAC;AAACC,EAAA,GAlCIrB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}